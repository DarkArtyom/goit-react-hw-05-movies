{"version":3,"file":"static/js/387.e32262f4.chunk.js","mappings":"sUAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBC,EAAAA,GAAAA,IAAA,2FAErB,CAAED,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,aAAwCH,GAAxC,gFAA6BI,EAA7B,EAA6BA,QAA7B,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,4DAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,aAA2CL,GAA3C,gFAA+BM,EAA/B,EAA+BA,SAA/B,SACkBL,EAAAA,GAAAA,IAAA,kHACsFK,GAC3G,CAAEN,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,aAAwCP,GAAxC,gFAA6BI,EAA7B,EAA6BA,QAA7B,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,oEAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeM,EAAtB,iDAAO,OAAP,oBAAO,aAA2CR,GAA3C,gFAAgCI,EAAhC,EAAgCA,QAAhC,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,oEAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAgBPC,EAAYM,UAAY,CACtBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,YAEVL,EAAcI,UAAY,CACxBH,SAAUI,IAAAA,OAAAA,WACVV,OAAQU,IAAAA,OAAAA,YAEVH,EAAYE,UAAY,CACtBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,YAEVF,EAAeC,UAAY,CACzBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,W,yKC/DGC,EAAUC,EAAAA,GAAAA,QAAH,0CAIPC,EAAWD,EAAAA,GAAAA,GAAH,wRAaRE,EAAYF,EAAAA,GAAAA,GAAH,kLAMTG,EAAgBH,EAAAA,GAAAA,IAAH,yHAObI,EAAUJ,EAAAA,GAAAA,IAAH,6K,mBC8BpB,EAnDa,WACX,IAAQR,GAAYa,EAAAA,EAAAA,MAAZb,QACR,GAAgCc,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAmBA,IAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBvB,EAASsB,EAAWtB,OAU1B,OARA,iBAAC,8GAE+BO,EAAAA,EAAAA,IAAY,CAAEH,QAAAA,GAAWJ,GAFxD,OAESwB,EAFT,OAGGJ,GAAY,SAAAK,GAAC,wBAAQA,IAAR,OAAcD,EAAcE,KAAKC,MAAjC,IAHhB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,GAQO,WACLP,EAAWQ,OACZ,CACF,GAAE,CAAC1B,IAECA,EAIL,OACE,SAACO,EAAD,WACE,SAACE,EAAD,UACGM,EAASY,KAAI,SAAAJ,GAAI,OAChB,SAACb,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,CACEgB,IAAG,yCAAoCL,EAAKM,cAC5CC,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,0BACE,iCADF,IACgBT,EAAKU,SAErB,0BACE,sCADF,IACqBV,EAAKW,iBAZdX,EAAKY,GADL,OAqBzB,C","sources":["Services/Fetches.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport async function fetchTrending(signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmById({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByQuery({ query }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${query}`,\n    { signal }\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 10px;\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItems = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CastImg = styled.img`\n  display: block;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastList,\n  CastItems,\n  CardContainer,\n  Section,\n  CastImg,\n} from './Cast.styled';\nimport { getFilmCast } from 'Services/Fetches';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [filmCast, setFilmCast] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    (async function () {\n      try {\n        const fetchFilmCast = await getFilmCast({ movieId }, signal);\n        setFilmCast(p => [...p, ...fetchFilmCast.data.cast]);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (!movieId) {\n    return;\n  }\n\n  return (\n    <Section>\n      <CastList>\n        {filmCast.map(cast => (\n          <CastItems key={cast.id}>\n            <CardContainer>\n              <CastImg\n                src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                alt=\"\"\n                width=\"100\"\n                height=\"150\"\n              />\n              <p>\n                <b>Name:</b> {cast.name}\n              </p>\n              <p>\n                <b>Character:</b> {cast.character}\n              </p>\n            </CardContainer>\n          </CastItems>\n        ))}\n      </CastList>\n    </Section>\n  );\n};\n\nexport default Cast;\n"],"names":["fetchTrending","signal","axios","response","getFilmById","movieId","getFilmByName","filmName","getFilmCast","getFilmReviews","propTypes","PropTypes","Section","styled","CastList","CastItems","CardContainer","CastImg","useParams","useState","filmCast","setFilmCast","useEffect","controller","AbortController","fetchFilmCast","p","data","cast","console","log","abort","map","src","profile_path","alt","width","height","name","character","id"],"sourceRoot":""}