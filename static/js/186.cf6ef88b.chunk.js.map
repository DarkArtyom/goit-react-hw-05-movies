{"version":3,"file":"static/js/186.cf6ef88b.chunk.js","mappings":"wOAkDA,UA9CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAS1B,OARA,iBAAC,8GAE8BC,EAAAA,EAAAA,IAAe,CAAET,QAAAA,GAAWQ,GAF1D,OAESE,EAFT,OAGGN,GAAc,SAAAO,GAAC,wBAAQA,IAAR,OAAcD,EAAaE,KAAKC,SAAhC,IAHlB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,GAQO,WACLT,EAAWU,OACZ,CACF,GAAE,CAAChB,IAECA,EAIL,OACE,6BACGG,EAAWc,OAAS,GACnB,wBACGd,EAAWe,KAAI,SAAAC,GAAM,OACpB,2BACE,0BACE,mCADF,IACkBA,EAAOC,WAEzB,0BACE,mCADF,IACkBD,EAAOE,aALlBF,EAAOG,GADI,OAYxB,qDAIP,C,sNC7CM,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6Bf,GAA7B,uFACkBgB,EAAAA,GAAAA,IAAA,2FAErB,CAAEhB,OAAAA,IAHC,cACCiB,EADD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,aAAwClB,GAAxC,gFAA6BR,EAA7B,EAA6BA,QAA7B,SACkBwB,EAAAA,GAAAA,IAAA,6CACiBxB,EADjB,4DAErB,CAAEQ,OAAAA,IAHC,cACCiB,EADD,yBAKEA,GALF,kEAQA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,aAA2CnB,GAA3C,gFAA+BoB,EAA/B,EAA+BA,SAA/B,SACkBJ,EAAAA,GAAAA,IAAA,kHACsFI,GAC3G,CAAEpB,OAAAA,IAHC,cACCiB,EADD,yBAKEA,GALF,kEAQA,SAAeI,EAAtB,iDAAO,OAAP,oBAAO,aAAwCrB,GAAxC,gFAA6BR,EAA7B,EAA6BA,QAA7B,SACkBwB,EAAAA,GAAAA,IAAA,6CACiBxB,EADjB,oEAErB,CAAEQ,OAAAA,IAHC,cACCiB,EADD,yBAKEA,GALF,kEAQA,SAAehB,EAAtB,iDAAO,OAAP,oBAAO,aAA2CD,GAA3C,gFAAgCR,EAAhC,EAAgCA,QAAhC,SACkBwB,EAAAA,GAAAA,IAAA,6CACiBxB,EADjB,oEAErB,CAAEQ,OAAAA,IAHC,cACCiB,EADD,yBAKEA,GALF,kEAQPC,EAAYI,UAAY,CACtB9B,QAAS+B,IAAAA,OAAAA,WACTvB,OAAQuB,IAAAA,OAAAA,YAEVJ,EAAcG,UAAY,CACxBF,SAAUG,IAAAA,OAAAA,WACVvB,OAAQuB,IAAAA,OAAAA,YAEVF,EAAYC,UAAY,CACtB9B,QAAS+B,IAAAA,OAAAA,WACTvB,OAAQuB,IAAAA,OAAAA,YAEVtB,EAAeqB,UAAY,CACzB9B,QAAS+B,IAAAA,OAAAA,WACTvB,OAAQuB,IAAAA,OAAAA,W","sources":["components/Reviews/Reviews.jsx","components/Services/Fetches.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getFilmReviews } from 'components/Services/Fetches';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReview, setfilmReview] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    (async function () {\n      try {\n        const fetchReviews = await getFilmReviews({ movieId }, signal);\n        setfilmReview(p => [...p, ...fetchReviews.data.results]);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (!movieId) {\n    return;\n  }\n\n  return (\n    <section>\n      {filmReview.length > 0 ? (\n        <ul>\n          {filmReview.map(review => (\n            <li key={review.id}>\n              <p>\n                <b>Author:</b> {review.author}\n              </p>\n              <p>\n                <b>Review:</b> {review.content}\n              </p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There are no reviews yet</p>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport async function fetchTrending(signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmById({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\n"],"names":["movieId","useParams","useState","filmReview","setfilmReview","useEffect","controller","AbortController","signal","getFilmReviews","fetchReviews","p","data","results","console","log","abort","length","map","review","author","content","id","fetchTrending","axios","response","getFilmById","getFilmByName","filmName","getFilmCast","propTypes","PropTypes"],"sourceRoot":""}