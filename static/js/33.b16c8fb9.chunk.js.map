{"version":3,"file":"static/js/33.b16c8fb9.chunk.js","mappings":"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","sources":["Services/Fetches.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport async function fetchTrending(signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmById({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByQuery({ query }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${query}`,\n    { signal }\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nexport const SectionMovieDetails = styled.section`\n  padding: 15px;\n`;\n\nexport const ContainerMovieDetails = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  margin-top: 15px;\n`;\n\nexport const InfoFilmBox = styled.div`\n  padding: 20px;\n`;\n\nexport const FilmTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const AditionalList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  margin: 0;\n  text-decoration: underline;\n`;\n\nexport const AditionalTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n","// import axios from 'axios';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { StyledLink } from 'components/Layout/Layout.styled';\nimport {\n  SectionMovieDetails,\n  ContainerMovieDetails,\n  InfoFilmBox,\n  FilmTitle,\n  AditionalList,\n  AditionalTitle,\n} from './MovieDetails.styled';\nimport { getFilmById } from 'Services/Fetches';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmById, setFilmById] = useState(null);\n  const location = useLocation();\n  const fromLocationRef = location.state.from;\n  // const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    (async function () {\n      try {\n        const fetchFilmById = await getFilmById({ movieId }, signal);\n        setFilmById(fetchFilmById.data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n  if (!filmById) {\n    return;\n  }\n\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    filmById;\n\n  return (\n    <main>\n      <SectionMovieDetails>\n        <StyledLink to={fromLocationRef}>Go back</StyledLink>\n        <ContainerMovieDetails>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            width=\"200\"\n            height=\"300\"\n            alt={title}\n          />\n          <InfoFilmBox>\n            <FilmTitle>\n              {title} ({Number.parseInt(release_date)})\n            </FilmTitle>\n            <p>\n              <b>Rating:</b> {vote_average}\n            </p>\n            <p>\n              <b>Overview:</b> {overview}\n            </p>\n            <p>\n              <b>Genres:</b>\n              {genres.map(genre => genre.name).join(', ')}\n            </p>\n          </InfoFilmBox>\n        </ContainerMovieDetails>\n        <div>\n          <AditionalTitle>Aditional information</AditionalTitle>\n          <AditionalList>\n            <li>\n              <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n                Cast\n              </StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n                Reviews\n              </StyledLink>\n            </li>\n          </AditionalList>\n        </div>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </SectionMovieDetails>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchTrending","signal","axios","response","getFilmById","movieId","getFilmByName","filmName","getFilmCast","getFilmReviews","propTypes","PropTypes","SectionMovieDetails","styled","ContainerMovieDetails","InfoFilmBox","FilmTitle","AditionalList","AditionalTitle","useParams","useState","filmById","setFilmById","location","useLocation","fromLocationRef","state","from","useEffect","controller","AbortController","fetchFilmById","data","console","log","abort","poster_path","release_date","title","vote_average","overview","genres","to","src","width","height","alt","Number","parseInt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}