{"version":3,"file":"static/js/186.c279cc97.chunk.js","mappings":"sUAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBC,EAAAA,GAAAA,IAAA,2FAErB,CAAED,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,aAAwCH,GAAxC,gFAA6BI,EAA7B,EAA6BA,QAA7B,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,4DAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,aAA2CL,GAA3C,gFAA+BM,EAA/B,EAA+BA,SAA/B,SACkBL,EAAAA,GAAAA,IAAA,kHACsFK,GAC3G,CAAEN,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,aAAwCP,GAAxC,gFAA6BI,EAA7B,EAA6BA,QAA7B,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,oEAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeM,EAAtB,iDAAO,OAAP,oBAAO,aAA2CR,GAA3C,gFAAgCI,EAAhC,EAAgCA,QAAhC,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,oEAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAgBPC,EAAYM,UAAY,CACtBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,YAEVL,EAAcI,UAAY,CACxBH,SAAUI,IAAAA,OAAAA,WACVV,OAAQU,IAAAA,OAAAA,YAEVH,EAAYE,UAAY,CACtBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,YAEVF,EAAeC,UAAY,CACzBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,W,wHCfV,UA9CgB,WACd,IAAQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAoCQ,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBjB,EAASgB,EAAWhB,OAS1B,OARA,iBAAC,8GAE8BQ,EAAAA,EAAAA,IAAe,CAAEJ,QAAAA,GAAWJ,GAF1D,OAESkB,EAFT,OAGGJ,GAAc,SAAAK,GAAC,wBAAQA,IAAR,OAAcD,EAAaE,KAAKC,SAAhC,IAHlB,gDAKGC,QAAQC,IAAR,MALH,wDAAD,GAQO,WACLP,EAAWQ,OACZ,CACF,GAAE,CAACpB,IAECA,EAIL,OACE,6BACGS,EAAWY,OAAS,GACnB,wBACGZ,EAAWa,KAAI,SAAAC,GAAM,OACpB,2BACE,0BACE,mCADF,IACkBA,EAAOC,WAEzB,0BACE,mCADF,IACkBD,EAAOE,aALlBF,EAAOG,GADI,OAYxB,qDAIP,C","sources":["Services/Fetches.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport async function fetchTrending(signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmById({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByQuery({ query }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${query}`,\n    { signal }\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getFilmReviews } from 'Services/Fetches';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReview, setfilmReview] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    (async function () {\n      try {\n        const fetchReviews = await getFilmReviews({ movieId }, signal);\n        setfilmReview(p => [...p, ...fetchReviews.data.results]);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (!movieId) {\n    return;\n  }\n\n  return (\n    <section>\n      {filmReview.length > 0 ? (\n        <ul>\n          {filmReview.map(review => (\n            <li key={review.id}>\n              <p>\n                <b>Author:</b> {review.author}\n              </p>\n              <p>\n                <b>Review:</b> {review.content}\n              </p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>There are no reviews yet</p>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchTrending","signal","axios","response","getFilmById","movieId","getFilmByName","filmName","getFilmCast","getFilmReviews","propTypes","PropTypes","useParams","useState","filmReview","setfilmReview","useEffect","controller","AbortController","fetchReviews","p","data","results","console","log","abort","length","map","review","author","content","id"],"sourceRoot":""}