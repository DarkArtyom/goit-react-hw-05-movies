{"version":3,"file":"static/js/604.655d515b.chunk.js","mappings":"sUAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBC,EAAAA,GAAAA,IAAA,2FAErB,CAAED,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,aAAwCH,GAAxC,gFAA6BI,EAA7B,EAA6BA,QAA7B,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,4DAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeG,EAAtB,iDAAO,OAAP,oBAAO,aAA2CL,GAA3C,gFAA+BM,EAA/B,EAA+BA,SAA/B,SACkBL,EAAAA,GAAAA,IAAA,kHACsFK,GAC3G,CAAEN,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeK,EAAtB,iDAAO,OAAP,oBAAO,aAAwCP,GAAxC,gFAA6BI,EAA7B,EAA6BA,QAA7B,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,oEAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQA,SAAeM,EAAtB,iDAAO,OAAP,oBAAO,aAA2CR,GAA3C,gFAAgCI,EAAhC,EAAgCA,QAAhC,SACkBH,EAAAA,GAAAA,IAAA,6CACiBG,EADjB,oEAErB,CAAEJ,OAAAA,IAHC,cACCE,EADD,yBAKEA,GALF,kEAQPC,EAAYM,UAAY,CACtBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,YAEVL,EAAcI,UAAY,CACxBH,SAAUI,IAAAA,OAAAA,WACVV,OAAQU,IAAAA,OAAAA,YAEVH,EAAYE,UAAY,CACtBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,YAEVF,EAAeC,UAAY,CACzBL,QAASM,IAAAA,OAAAA,WACTV,OAAQU,IAAAA,OAAAA,W,qJC1CV,EAZiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,wBACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAYC,GAAE,iBAAYF,GAA1B,SAAiCC,KAD1BD,EADA,KAOhB,E,UCqBD,EA9Ba,WACX,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcM,EAAd,KAqBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBpB,EAASmB,EAAWnB,OAa1B,OAXA,iBAAC,gHAE2BD,EAAAA,EAAAA,IAAcC,GAFzC,UAESqB,EAFT,wDAMSC,EAAYD,EAAUE,KAAKC,QACjCP,GAAS,SAAAQ,GAAC,wBAAQA,IAAR,OAAcH,GAAd,IAPb,2GAAD,GAWO,WACLH,EAAWO,OACZ,CACF,GAAE,KAGD,6BACE,4CACA,SAAC,EAAD,CAAUf,MAAOA,MAGtB,C","sources":["components/Services/Fetches.js","components/ListFilm/ListFilm.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport async function fetchTrending(signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmById({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }, signal) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`,\n    { signal }\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n  signal: PropTypes.object.isRequired,\n};\n","import { StyledLink } from '../Layout/Layout.styled';\nimport PropTypes from 'prop-types';\n\nconst ListFilm = ({ films }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`movies/${id}`}>{title}</StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListFilm;\n\nListFilm.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport ListFilm from 'components/ListFilm/ListFilm';\nimport { fetchTrending } from 'components/Services/Fetches';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    (async function () {\n      try {\n        const dataFetch = await fetchTrending(signal);\n        if (!dataFetch) {\n          return;\n        }\n        const filmsData = dataFetch.data.results;\n        setFilms(p => [...p, ...filmsData]);\n      } catch (error) {}\n    })();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <ListFilm films={films} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["fetchTrending","signal","axios","response","getFilmById","movieId","getFilmByName","filmName","getFilmCast","getFilmReviews","propTypes","PropTypes","films","map","id","title","to","useState","setFilms","useEffect","controller","AbortController","dataFetch","filmsData","data","results","p","abort"],"sourceRoot":""}