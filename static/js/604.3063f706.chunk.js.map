{"version":3,"file":"static/js/604.3063f706.chunk.js","mappings":"8SAGeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,GAAAA,IAAA,4FADzB,cACQC,EADR,yBAISA,GAJT,kEAOA,IAAMC,EAAM,CAAEH,c,WAPCA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAWR,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,8FAA6BC,EAA7B,EAA6BA,QAA7B,SACkBJ,EAAAA,GAAAA,IAAA,6CACiBI,EADjB,6DADlB,cACCH,EADD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,8FAA+BC,EAA/B,EAA+BA,SAA/B,SACkBN,EAAAA,GAAAA,IAAA,kHACsFM,IAFxG,cACCL,EADD,yBAIEA,GAJF,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,8FAA6BH,EAA7B,EAA6BA,QAA7B,SACkBJ,EAAAA,GAAAA,IAAA,6CACiBI,EADjB,qEADlB,cACCH,EADD,yBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,8FAAgCJ,EAAhC,EAAgCA,QAAhC,SACkBJ,EAAAA,GAAAA,IAAA,6CACiBI,EADjB,qEADlB,cACCH,EADD,yBAIEA,GAJF,kEAvBP,OA8BAE,EAAYM,UAAY,CACtBL,QAASM,IAAAA,OAAAA,YAEXL,EAAcI,UAAY,CACxBH,SAAUI,IAAAA,OAAAA,YAEZH,EAAYE,UAAY,CACtBL,QAASM,IAAAA,OAAAA,YAEXF,EAAeC,UAAY,CACzBL,QAASM,IAAAA,OAAAA,W,qJCrCX,EAZiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,wBACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,yBACE,SAAC,KAAD,CAAYC,GAAE,iBAAYF,GAA1B,SAAiCC,KAD1BD,EADA,KAOhB,E,UCmBD,EA5Ba,WACX,OAA0BG,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcM,EAAd,KACMC,GAAgBC,EAAAA,EAAAA,SAAO,GAkB7B,OAjBAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,mGAEOF,EAAcG,QAFrB,uBAGKH,EAAcG,SAAU,EAH7B,0CAM2BnB,EAAAA,GAAAA,gBAN3B,UAMSoB,EANT,wDAUSC,EAAYD,EAAUE,KAAKC,QACjCR,GAAS,SAAAS,GAAC,wBAAQA,IAAR,OAAcH,GAAd,IAXb,2GAAD,EAcD,GAAE,KAGD,6BACE,4CACA,SAAC,EAAD,CAAUZ,MAAOA,MAGtB,C","sources":["components/Services/Fetches.js","components/ListFilm/ListFilm.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nasync function fetchTrending() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`\n  );\n  return response;\n}\n\nconst api = { fetchTrending };\n\nexport default api;\n\nexport async function getFilmById({ movieId }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n","import { StyledLink } from '../Layout/Layout.styled';\nimport PropTypes from 'prop-types';\n\nconst ListFilm = ({ films }) => {\n  return (\n    <ul>\n      {films.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`movies/${id}`}>{title}</StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListFilm;\n\nListFilm.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport ListFilm from 'components/ListFilm/ListFilm';\nimport api from 'components/Services/Fetches';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    (async function () {\n      try {\n        if (isFirstRender.current) {\n          isFirstRender.current = false;\n          return;\n        }\n        const dataFetch = await api.fetchTrending();\n        if (!dataFetch) {\n          return;\n        }\n        const filmsData = dataFetch.data.results;\n        setFilms(p => [...p, ...filmsData]);\n      } catch (error) {}\n    })();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <ListFilm films={films} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["fetchTrending","axios","response","api","getFilmById","movieId","getFilmByName","filmName","getFilmCast","getFilmReviews","propTypes","PropTypes","films","map","id","title","to","useState","setFilms","isFirstRender","useRef","useEffect","current","dataFetch","filmsData","data","results","p"],"sourceRoot":""}