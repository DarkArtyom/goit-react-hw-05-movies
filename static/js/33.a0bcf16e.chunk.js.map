{"version":3,"file":"static/js/33.a0bcf16e.chunk.js","mappings":"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","sources":["components/Services/Fetches.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nasync function fetchTrending() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=7e0fc0f40a1f522dce260b9a97593bef`\n  );\n  return response;\n}\n\nconst api = { fetchTrending };\n\nexport default api;\n\nexport async function getFilmById({ movieId }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`\n  );\n  return response;\n}\n\nexport async function getFilmByName({ filmName }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US&query=${filmName}`\n  );\n  return response;\n}\n\nexport async function getFilmCast({ movieId }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`\n  );\n  return response;\n}\n\nexport async function getFilmReviews({ movieId }) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=7e0fc0f40a1f522dce260b9a97593bef&language=en-US`\n  );\n  return response;\n}\n\ngetFilmById.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\ngetFilmByName.propTypes = {\n  filmName: PropTypes.string.isRequired,\n};\ngetFilmCast.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\ngetFilmReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\nexport const SectionMovieDetails = styled.section`\n  padding: 15px;\n`;\n\nexport const ContainerMovieDetails = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n  margin-top: 15px;\n`;\n\nexport const InfoFilmBox = styled.div`\n  padding: 20px;\n`;\n\nexport const FilmTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const AditionalList = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  margin: 0;\n  text-decoration: underline;\n`;\n\nexport const AditionalTitle = styled.h3`\n  text-align: center;\n  margin-bottom: 15px;\n`;\n","// import axios from 'axios';\nimport { Suspense } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { StyledLink } from 'components/Layout/Layout.styled';\nimport {\n  SectionMovieDetails,\n  ContainerMovieDetails,\n  InfoFilmBox,\n  FilmTitle,\n  AditionalList,\n  AditionalTitle,\n} from './MovieDetails.styled';\nimport { getFilmById } from 'components/Services/Fetches';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmById, setFilmById] = useState(null);\n  const isFirstPage = useRef(true);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    (async function () {\n      try {\n        if (isFirstPage.current) {\n          isFirstPage.current = false;\n          return;\n        }\n        const fetchFilmById = await getFilmById({ movieId });\n        setFilmById(fetchFilmById.data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n  if (!filmById) {\n    return;\n  }\n\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n    filmById;\n\n  return (\n    <main>\n      <SectionMovieDetails>\n        <StyledLink to={backLinkHref}>Go back</StyledLink>\n        <ContainerMovieDetails>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            width=\"200\"\n            height=\"300\"\n            alt={title}\n          />\n          <InfoFilmBox>\n            <FilmTitle>\n              {title} ({Number.parseInt(release_date)})\n            </FilmTitle>\n            <p>\n              <b>Rating:</b> {vote_average}\n            </p>\n            <p>\n              <b>Overview:</b> {overview}\n            </p>\n            <p>\n              <b>Genres:</b>\n              {genres.map(genre => genre.name).join(', ')}\n            </p>\n          </InfoFilmBox>\n        </ContainerMovieDetails>\n        <div>\n          <AditionalTitle>Aditional information</AditionalTitle>\n          <AditionalList>\n            <li>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </li>\n            <li>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n            </li>\n          </AditionalList>\n        </div>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </SectionMovieDetails>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchTrending","axios","response","api","getFilmById","movieId","getFilmByName","filmName","getFilmCast","getFilmReviews","propTypes","PropTypes","SectionMovieDetails","styled","ContainerMovieDetails","InfoFilmBox","FilmTitle","AditionalList","AditionalTitle","useParams","useState","filmById","setFilmById","isFirstPage","useRef","backLinkHref","useLocation","state","from","useEffect","current","fetchFilmById","data","console","log","poster_path","release_date","title","vote_average","overview","genres","to","src","width","height","alt","Number","parseInt","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}